"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const clientMutationController_1 = require("../controllers/client/clientMutationController");
const adminMutationController_1 = require("../controllers/admin/adminMutationController");
const express_1 = require("express");
const auth_1 = require("../middleware/auth");
const companyMutationController_1 = require("../controllers/company/companyMutationController");
const auth_2 = require("../utils/auth");
const adminQueryController_1 = require("../controllers/admin/adminQueryController");
const adminQueryController_2 = require("../controllers/admin/adminQueryController");
const adminMutationController_2 = require("../controllers/admin/adminMutationController");
const clientQueryController_1 = require("../controllers/client/clientQueryController");
const uploadImage_1 = require("../middleware/uploadImage");
const clientMutationController_2 = require("../controllers/client/clientMutationController");
const clientQueryController_2 = require("../controllers/client/clientQueryController");
const router = (0, express_1.Router)();
router.post('/signup', clientMutationController_1.userSignup);
// router.put('/update', forgotPassword);
router.put('/resendotp/:token', clientMutationController_1.resendOTP);
router.post('/login', clientMutationController_1.loginUser);
router.post('/adminSignup', adminMutationController_1.createAdmin);
router.put('/forgot-password', clientMutationController_2.forgotPassword);
router.patch('/verify-user', auth_1.auth, clientMutationController_2.verifyUser);
router.put('/change-password-email', clientMutationController_1.verifyChangePasswordEmail);
router.put('/change-password-otp/:id', clientMutationController_1.verifyChangePasswordOTP);
router.put('/change-password/:id', clientMutationController_1.verifyChangePassword);
router.put('/updateaccount', clientMutationController_1.updateUserProfile);
router.put('/profileimage', auth_1.auth, uploadImage_1.upload.single('image'), clientMutationController_1.createUserImage);
router.post("/company", auth_2.isAdmin, companyMutationController_1.createCompany);
router.get("/get", adminQueryController_1.getUsersByAdmin);
router.get("/getAllUsersByAdmin", auth_2.isAdmin, adminQueryController_2.getAllUsersByAdmin);
router.delete("/deleteUser/:id", auth_2.isAdmin, adminMutationController_2.deleteUserByAdmin);
router.get("/balance", auth_1.auth, clientQueryController_1.getUsersBalance);
router.get("/info", auth_1.auth, clientQueryController_1.getUsersInfo);
router.get("/notifications", auth_1.auth, clientQueryController_2.getUserNotifications);
exports.default = router;
